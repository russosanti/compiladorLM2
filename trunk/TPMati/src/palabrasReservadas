"const", "var", "ref"
"natural", "entero"
"procedimiento", "funcion", "comenzarcomenzar", "globales", "mientras", "hacer", 
"si", "entonces", "leer", "mostrarln", 


M : natural = 7n, R : entero = 90;
var N, S : entero;
var A[12] : natural;

procedimiento PROC1();
var A : entero;
var B : natural;
comenzar
  B := M;
  while B > 0 do
    si par(B) entonces
      A := A + 1;
    fin-si
    mostrarLN 'Visualizacion', B, ' ', A
    B := B - 1
  fin-mientras
fin-proc;

procedimiento PROC2(ref R : entero);
const T : natural = 67n;
var W11 : entero;
var W12, Q, R : natural;
comenzar
  S := (S ++ M) ** 2n;
  Q := 1n;
  leer W11;  {lectura de teclado}
  W12 := ANATURAL(AW11 * 2 + S);
  while (W12 Ð 2) <= R + S do
    W12 := W12 * 2;
  fin-mientras;
  while W12 + M > Y / 2 do

   Q := Q * 2;
    W12 := W12 / 2;
    si W12 <= R entonces
      R := R Ð W12;
      Q := Q + 1;
    fin-si;
  fin-mientras;
  A[1] := Q;
fin-proc;

funcion FUN1(T: entero, val N2 : entero) : entero;
var N: entero;
comenzar
  si T > 0 entonces
    N := 45;
  sino
    N := 70;
  fin-si;
fin-func N * 2;

procedimiento PRINCIPAL();
var X: entero;
comenzar
  PROC1();
  S := M + 1;
  PROC2(S);
  X := FUN1(5, 8);
  A[5n] := X;
  mostrar A[ANATURAL(S) ++ 1n];
fin-proc;
  